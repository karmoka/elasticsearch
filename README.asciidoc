= Elasticsearch

== Log8371 -- TP2 : Efficacité et performance
Les fichiers générés pour cet exercises se trouvent dans ./TP2_Log8371

== Vidéo
Une vidéo démontrant les sections ci-dessous se trouve à : https://drive.google.com/file/d/1I3AenL7j018NB8poi3nQQE77_Gu7NleR/view?usp=sharing

== Build Image
Une image docker custom est requise pour l'étape de profiling.
Naviguer dans le dossier ./TP2_Log8371 et exécuté "sudo docker build .".
Prenez note du nom de l'image générée et copié la dans les champs appropriés de docker-compose.yml

=== Deploiement
Exec: 

- sudo systemctl start docker
- sudo systemctl enable docker
- sudo sysctl -w vm.max_map_count=262144

Naviguez dans le dossier ./TP2_Log8371 et exécutez 

- "sudo docker-compose up"
- "sudo docker stats" pour suivre l'ouverture des 3 containers

=== Profiling
1. Connectez-vous à une container avec "sudo docker exec -it es_master bash"   
2. Exécutez "/usr/local/jprofiler_linux_11_1_2/bin/jpenable".
3. Entrez "1" puis "8849".  
4. "Exit"
5. "sudo docker ps", notez le port XXXX->8849 du container d'intérêt
6. Ouvez JProfiler, Quick Attach, remote machine, local connection to "127.0.0.1" au port XXXX  
7. Intrumentation

=== Monitoring
Une instance de cadvisor est lancé en même temps que elasticsearch. Ouvrez votre navigatuer web et naviguez à 127.0.0.1:8080. Cliqué sur "Docker" pour avoir une page montrant l'utilisation des ressources des containers docker.  

Vous pouvez aussi utiliser votre instance de JProfiler ouvert à la section précedente ou simplement utiliser "sudo docker stats".

=== Scaling

sudo docker-compose up -d --scale es_slave=n  

ou n est le nombre total de noeud esclave que vous désirez.  